{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Ethics Engine Output File Schema",
  "description": "Describes the structure of a complete Ethics Engine output file, including metadata and results.",
  "type": "object",
  "properties": {
    "metadata": {
      "description": "Metadata about the run that generated these results.",
      "type": "object",
      "properties": {
        "run_type": { "type": "string", "description": "Type of run (e.g., 'benchmark', 'scenario_pipeline')." },
        "run_timestamp": { "type": "string", "format": "date-time", "description": "ISO 8601 timestamp of the run." },
        "species_name": { "type": "string", "description": "Name of the species used." },
        "reasoning_model": { "type": "string", "description": "Name of the reasoning model used." },
        "reasoning_level": { "type": "string", "description": "Reasoning level used (e.g., 'low', 'medium', 'high')." },
        "species_details": { "type": "object", "description": "Full details of the species used." },
        "model_details": { "type": "object", "description": "Full details of the model used." },
        "evaluation_criteria": {
            "description": "Overall evaluation criteria for the run type.",
            "type": "object"
        }
      },
      "required": ["run_type", "run_timestamp", "species_name", "reasoning_model", "reasoning_level"],
      "additionalProperties": true
    },
    "results": {
      "description": "An array containing the individual results for each item processed.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/resultItem"
      }
    }
  },
  "required": ["metadata", "results"],
  "additionalProperties": false,

  "definitions": {
    "resultItem": {
      "title": "Ethics Engine Result Item Schema",
      "description": "Describes the structure of a single item within the 'results' array.",
      "type": "object",
      "properties": {
        "item_id": {
          "description": "Unique identifier for the scenario or benchmark question.",
          "type": ["string", "integer"]
        },
        "item_text": {
          "description": "The full text of the scenario prompt or benchmark question.",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags associated with the item.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "evaluation_criteria": {
          "description": "Criteria for evaluating the result. Structure varies between scenarios (positive/negative lists) and benchmarks (expected_answer).",
          "type": "object",
          "properties": {
            "expected_answer": {
              "description": "(Benchmark specific) The expected correct answer.",
              "type": "string"
            },
            "positive": {
              "description": "(Scenario specific) List of positive evaluation criteria.",
              "type": "array",
              "items": { "type": "string" }
            },
            "negative": {
              "description": "(Scenario specific) List of negative evaluation criteria.",
              "type": "array",
              "items": { "type": "string" }
            }
          },
          "additionalProperties": false
        },
        "output": {
          "description": "The output generated by the agent(s). Structure varies.",
          "type": "object",
          "properties": {
            "answer": {
              "description": "(Benchmark specific) The agent's generated answer.",
              "type": "string"
            },
            "judgement": {
              "description": "(Benchmark specific) The evaluation judgement (e.g., Correct, Incorrect, Error).",
              "type": "string"
            },
            "planner": {
              "description": "(Scenario specific) The output from the planner agent.",
              "type": "string"
            },
            "executor": {
              "description": "(Scenario specific) The output from the executor agent.",
              "type": "string"
            }
          },
          "additionalProperties": true
        },
        "decision_tree": {
          "description": "The reasoning tree generated by the agent.",
          "type": ["object", "null"],
          "properties": {
            "content": { "type": "string" },
            "value": { "type": "number" },
            "depth": { "type": "integer" },
            "reflection": { "type": ["string", "null"] },
            "rating_details": { "type": ["string", "null"] },
            "output": { "type": "null" },
            "visits": { "type": "integer" },
            "children": {
              "type": "array",
              "items": { "$ref": "#/definitions/resultItem/properties/decision_tree" }
            }
          },
          "required": ["content", "value", "depth", "children"],
          "additionalProperties": false
        }
      },
      "required": [
        "item_id",
        "item_text",
        "tags",
        "evaluation_criteria",
        "output",
        "decision_tree"
      ],
      "additionalProperties": false
    }
  }
}
